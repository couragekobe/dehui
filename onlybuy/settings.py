"""
Django settings for onlybuy project.

Generated by 'django-admin startproject' using Django 1.11.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '^im!t1h2#zb52=(1$xl@#(^w11n7_!&xe!fter0%8$ayol^xok'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'user',  # 买家用户信息模块
    'address',  # 买收货地址信息模块
    'goods',  # 商品信息模块
    'order',  # 订单模块
    'cart',  # 购物车模块
    'pay',  # 支付模块
    'sale', #卖家模块
    'favorite',  # 收藏模块
    'administrator',  # 管理员模块
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'middleware.privilege.Pemission',  # 权限验证功能中间件
]

ROOT_URLCONF = 'onlybuy.urls'
# APPEND_SLASH = True

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'DIRS': [],
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # 添加模板路径
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'onlybuy.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # },

    # MySql 数据库设置
    #   数据库名: onlybuy
    #   数据库管理员用户名: root
    #   数据库管理员密码: 123456
    #   数据库主机的IP地址: localhost(默认数据库在本机127.0.0.1上)
    #   数据库主机的端口号: 3306 (mysql服务默认,无需修改)
    # 此处先要在数据库中用如下SQL语句创始数据库:
    #   $ mysql -uroot -p
    #   Enter passwd: 123456
    #   mysql> create database onlybuy default charset utf8 collate utf8_general_ci;

    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'onlybuy',  # mysql数据库中的表名
        'USER': 'root',
        'PASSWORD': '123456',
        'HOST': 'localhost',
        'PORT': '3306',
    },
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-hans'  # 改为中文 文档详见: import django.conf.global_settings 中的文档字符串 


TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'


# 添加静态文件的搜索路径
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# STATIC_ROOT = "static/templates/"
# STATIC_ROOT = "static/"

JS_PATH= os.path.join(BASE_DIR, 'static/js').replace('\\','/')
JS_URL='/js/'

CSS_PATH= os.path.join(BASE_DIR, 'static/css').replace('\\','/')
CSS_URL='/css/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'static/images').replace('\\', '/')
MEDIA_URL = '/images/'

JQ_PATH = os.path.join(BASE_DIR, 'static/jquery').replace('\\', '/')
JQ_URL = '/jquery/'


# 不使用默认的 auth_user 数据表作为用户管理数据表，而是使用user 应用下的 User 创建的user_user数据表

AUTH_USER_MODEL = 'user.User'

